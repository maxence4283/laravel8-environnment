apiVersion: v1
kind: Secret
metadata:
  name: mysql-secrets
  namespace: devapp
  labels:
    app: laravel
type: Opaque
data:
  root-password: secret
  mysql-name: laravel
  mysql-login: laravel
  mysql-password: laravel
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: mysql-local
  namespace: devapp
  labels:
    app: laravel
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 15Gi
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: front-local
  namespace: devapp
  labels:
    app: laravel
spec:
  accessModes:
    - ReadWriteMany
  resources:
    requests:
      storage: 10Gi
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: app-local
  namespace: devapp
  labels:
    app: laravel
spec:
  accessModes:
    - ReadWriteMany
  resources:
    requests:
      storage: 10Gi
---
apiVersion: v1
kind: Deployment
metadata:
  name: laravel-mysql
  namespace: devapp
  labels:
    app: laravel
    tier: mysql
spec:
  selector:
    matchLabels:
      app: laravel
      tier: mysql
  strategy:
    type: Recreate
  template:
    metadata:
      labels:
        app: laravel
        tier: mysql
    spec:
      containers:
      - image: # changer pour image perso mariadb - image à build
        name: mysql
        env:
        - name: MARIADB_ROOT_PASSWORD
          valueFrom:
            secretKeyRef:
              name: laravel-secrets
              key: root-password
        - name: MARIADB_DATABASE
          valueFrom:
            secretKeyRef:
              name: laravel-secrets
              key: mysql-name
        - name: MARIADB_USER
          valueFrom:
            secretKeyRef:
              name: laravel-secrets
              key: mysql-login
        - name: MARIADB_PASSWORD
          valueFrom:
            secretKeyRef:
              name: laravem-secrets
              key: mysql-password
        ports:
        - containerPort: 3306
          name: mysql
        volumeMounts:
        - name: mysql-volume
          mountPath: /var/lib/mysql
      volumes:
      - name: mysql-volume
        persistentVolumeClaim:
          claimName: mysql-local
---
apiVersion: v1
kind: Service
metadata:
  name: laravel-mysql
  namespace: devapp
  labels:
    app: laravel
    tier: mysql
spec:
  ports:
    - port: 3306
  selector:
    app: laravel
    tier: mysql
  clusterIP: None
---
apiVersion: v1
kind: Deployment
metadata:
  name: laravel-front
  namespace: devapp
  labels:
    app: laravel
    tier: front
spec:
  selector:
    matchLabels:
      app: laravel
      tier: front
  strategy:
    type: Recreate
  template:
    metadata:
      labels:
        app: laravel
        tier: front
    spec:
      containers:
      - image: # changer pour nginx - image à build
        name: front
        ports:
        - containerPort: 80
          name: front-port
        volumeMounts:
        - name: front-volume
          mountPath: /var/www/html
      volumes:
      - name: front-volume
        persistentVolumeClaim:
          claimName: front-local
---
apiVersion: v1
kind: Service
metadata:
  name: front-service
  namespace: devapp
  labels:
    app: laravel
    tier: front
spec:
  ports:
  - port: 80
    nodePort: 32541
    targetPort: front-port
    protocol: TCP
  selector:
    app: laravel
    tier: front
  type: NodePort
---
apiVersion: v1
kind: Deployment
metadata:
  name: laravel-app
  namespace: devapp
  labels:
    app: laravel
    tier: app
spec:
  selector:
    matchLabels:
      app: laravel
      tier: app
  strategy:
    type: Recreate
  template:
    metadata:
      labels:
        app: laravel
        tier: app
    spec:
      containers:
      - image: # Changer pour image engine perso à build
        name: app
        volumeMounts:
        - name: app-volume
          mountPath: /var/www/html
      volumes:
      - name: app-volume
        persistentVolumeClaim:
          claimName: app-local
---
apiVersion: v1
kind: Deployment
metadata:
  name: laravel-phpmyadmin
  namespace: devapp
  labels:
    app: laravel
    tier: phpmyadmin
spec:
  selector:
    matchLabels:
      app: laravel
      tier: phpmyadmin
  strategy:
    type: Recreate
  template:
    metadata:
      labels:
        app: laravel
        tier: phpmyadmin
    spec:
      containers:
      - image: phpmyadmin
        name: phpmyadmin
        env:
        - name: MPMA_HOST
          value: laravel-mysql
        ports:
        - containerPort: 80
          name: phpmyadmin-port
---
apiVersion: v1
kind: Service
metadata:
  name: phpmyadmin-service
  namespace: devapp
  labels:
    app: laravel
    tier: phpmyadmin
spec:
  ports:
  - port: 32000
    nodePort: 32000
    targetPort: phpmyadmin-port
    protocol: TCP
  selector:
    app: laravel
    tier: phpmyadmin
  type: NodePort
---
apiVersion: v1
kind: Deployment
metadata:
  name: laravel-redis
  namespace: devapp
  labels:
    app: laravel
    tier: redis
spec:
  selector:
    matchLabels:
      app: laravel
      tier: redis
  strategy:
    type: Recreate
  template:
    metadata:
      labels:
        app: laravel
        tier: redis
    spec:
      containers:
      - image: # Image perso à build
        name: redis
        ports:
        - containerPort: 6379
          name: redis-port
---
apiVersion: v1
kind: Service
metadata:
  name: redis-service
  namespace: devapp
  labels:
    app: laravel
    tier: redis
spec:
  ports:
    - port: 6379
  selector:
    app: laravel
    tier: redis
  clusterIP: None
